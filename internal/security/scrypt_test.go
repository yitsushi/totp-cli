package security_test

import (
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/yitsushi/totp-cli/internal/security"
)

// Storage structure represents the credential storage.
type Case struct {
	password	string
	salt		[]byte
	hash		[]byte
}

func TestScrypt(t *testing.T) {
	table := []Case{
		Case{
			password: "asdf",
			salt: []byte("hunter2"),
			hash: []byte{0x7e, 0xf9, 0x2e, 0x70, 0x8e, 0x50, 0x93, 0xad,
			             0x5f, 0xdc, 0xfc, 0x5d, 0x10, 0x4b, 0xaf, 0x7e,
			             0x73, 0x3d, 0x6d, 0xd8, 0x8c, 0xb7, 0x10, 0xba,
			             0x61, 0xcf, 0x85, 0xba, 0x4d, 0x89, 0x28, 0x72},
		},
		Case{
			password: "12345",
			salt: []byte("spaceballs"),
			hash: []byte{0x10, 0xa6, 0x76, 0x43, 0xcb, 0xfd, 0xc2, 0x13,
			             0x75, 0x10, 0x4e, 0x1c, 0xf0, 0x1e, 0xc8, 0xe4,
			             0x9c, 0x17, 0x8b, 0x15, 0xce, 0xc6, 0xd1, 0xe2,
			             0x4c, 0x59, 0x72, 0x3c, 0x90, 0x53, 0x31, 0x51},
		},
		Case{
			password: "asdf",
			salt: []byte("spaceballs"),
			hash: []byte{0x6b, 0xbf, 0xab, 0x0c, 0xab, 0x6c, 0xfb, 0x14,
			             0xb2, 0x55, 0x0e, 0xa5, 0xf9, 0x6d, 0x26, 0xca,
			             0xf1, 0x1c, 0xeb, 0xc4, 0xf9, 0x32, 0x15, 0xb8,
			             0x53, 0x5f, 0xa5, 0x5a, 0xda, 0xc4, 0xe7, 0x90},
		},
	}

	for _, x := range table {
		code, err := security.Scrypt(x.password, x.salt)

		assert.Nil(t, err)
		assert.Equal(t, x.hash, code)
	}
}
